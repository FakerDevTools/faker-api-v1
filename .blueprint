created:
    - database/factories/ApplicationFactory.php
    - database/factories/TokenFactory.php
    - database/factories/CallFactory.php
    - database/factories/IpFactory.php
    - database/factories/PermissionFactory.php
    - database/factories/LogFactory.php
    - database/migrations/2025_03_05_182639_create_applications_table.php
    - database/migrations/2025_03_05_182640_create_tokens_table.php
    - database/migrations/2025_03_05_182641_create_calls_table.php
    - database/migrations/2025_03_05_182642_create_ips_table.php
    - database/migrations/2025_03_05_182643_create_permissions_table.php
    - database/migrations/2025_03_05_182644_create_logs_table.php
    - database/migrations/2025_03_05_182645_create_application_user_table.php
    - app/Models/Application.php
    - app/Models/Token.php
    - app/Models/Call.php
    - app/Models/Ip.php
    - app/Models/Permission.php
    - app/Models/Log.php
models:
    User: { first: string, last: string, email: string, email_verified_at: 'timestamp nullable', github_username: 'string nullable', github_access_token: 'string nullable', reset_hash: 'string nullable', verify_hash: 'string nullable', avatar: 'longtext nullable', password: 'string nullable', session_id: 'string nullable', application_id: 'biginteger unsigned nullable', admin: boolean, remember_token: 'string:100 nullable' }
    Application: { name: string, image: 'longtext nullable', user_id: integer, softdeletes: softDeletes, timestamps: timestamps, relationships: { belongsTo: User, belongsToMany: User } }
    Token: { name: string, hash: string, application_id: integer, status: 'enum:active,inactive default:active', softdeletes: softDeletes, timestamps: timestamps, relationships: { belongsTo: Application } }
    Call: { url: string, address: 'string nullable', ip_id: 'integer nullable', token_id: 'integer nullable', result: 'enum:success,token,route,demo default:success', timestamps: timestamps, relationships: { belongsTo: 'Token,Ip' } }
    Ip: { address: 'string nullable', application_id: integer, status: 'enum:allowed,blocked,pending default:allowed', timestamps: timestamps, relationships: { belongsTo: Application, hasMany: Call } }
    Permission: { ip: string, status: 'enum:deny,allow default:deny', application_id: integer, timestamps: timestamps, relationships: { belongsTo: Application } }
    Log: { url: string, ip: string, application_id: integer, token_id: integer, timestamps: timestamps, relationships: { belongsTo: 'Application,Token' } }
